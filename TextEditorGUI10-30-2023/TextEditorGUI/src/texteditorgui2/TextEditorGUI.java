/*
 * Group 2:
 * James, Dylan, Jonathan, Zahra, Ben.
 */
package texteditorgui2;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent; 
import java.awt.event.WindowListener;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JToggleButton;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author dylanmora
 */
public class TextEditorGUI extends javax.swing.JFrame implements ActionListener, DocumentListener, WindowListener {
  Color color = Color.BLACK;
    private String fName = "Arial" ;
    private int fStyle = 2;
    private int fSize= 40 ;
    private boolean dirty;
    /**
     * Creates new form TextEditorGUI
     */
    public TextEditorGUI() {
       initComponents();
        clearBttm.addActionListener(this);
        editableBttm.addActionListener(this);
        colorChooserBttm.addActionListener(this);
        fontNameScroll.addActionListener(this);
        fontSizeScroll.addActionListener(this);
        fontStyleScroll.addActionListener(this);
        addBttm.addActionListener(this);
        saveBttm.addActionListener(this);
        modesBttm.addActionListener(this);
        txtDoc.getDocument().addDocumentListener(this);
        uploadBttm.addActionListener(this);
        addWindowListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        layeredPanel = new javax.swing.JLayeredPane();
        modesBttm = new javax.swing.JToggleButton();
        fontNameScroll = new javax.swing.JComboBox<>();
        fontSizeScroll = new javax.swing.JComboBox<>();
        fontStyleScroll = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        colorChooserBttm = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        editableBttm = new javax.swing.JToggleButton();
        clearBttm = new javax.swing.JButton();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        topBarPanel = new javax.swing.JPanel();
        addBttm = new javax.swing.JButton();
        uploadBttm = new javax.swing.JButton();
        saveBttm = new javax.swing.JButton();
        printBttm = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        nameLabel = new javax.swing.JLabel();
        lowPanel = new javax.swing.JPanel();
        wordLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDoc = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Text Editor");

        topPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        topPanel.setMaximumSize(new java.awt.Dimension(32767, 35767));
        topPanel.setPreferredSize(new java.awt.Dimension(918, 100));
        topPanel.setRequestFocusEnabled(false);

        layeredPanel.setBackground(new java.awt.Color(204, 204, 204));
        layeredPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        layeredPanel.setForeground(new java.awt.Color(255, 255, 255));
        layeredPanel.setPreferredSize(new java.awt.Dimension(1022, 85));

        modesBttm.setBackground(new java.awt.Color(242, 242, 242));
        modesBttm.setForeground(new java.awt.Color(255, 255, 255));
        modesBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/dark_mode_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        modesBttm.setSelected(true);
        modesBttm.setBorder(null);
        modesBttm.setContentAreaFilled(false);
        modesBttm.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/light_mode_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        modesBttm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modesBttmActionPerformed(evt);
            }
        });

        fontNameScroll.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        fontNameScroll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arial", "Helvetica Neue", ".AppleSystemUIFont", "Zapfino" }));
        fontNameScroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontNameScrollActionPerformed(evt);
            }
        });

        fontSizeScroll.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        fontSizeScroll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "24", "36", "46", "60" }));

        fontStyleScroll.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        fontStyleScroll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Style", "Bold", "Italic", "Bold & Italic" }));
        fontStyleScroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontStyleScrollActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setToolTipText("");

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        colorChooserBttm.setBackground(new java.awt.Color(0, 0, 0));
        colorChooserBttm.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        colorChooserBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/format_ink_highlighter_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        colorChooserBttm.setText("Font Color");
        colorChooserBttm.setBorder(null);
        colorChooserBttm.setBorderPainted(false);
        colorChooserBttm.setContentAreaFilled(false);

        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator6.setToolTipText("");

        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        editableBttm.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        editableBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/lock_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        editableBttm.setSelected(true);
        editableBttm.setText("Read Only");
        editableBttm.setBorder(null);
        editableBttm.setBorderPainted(false);
        editableBttm.setContentAreaFilled(false);
        editableBttm.setIconTextGap(3);
        editableBttm.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/lock_open_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N

        clearBttm.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        clearBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/auto_delete_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        clearBttm.setText("Clear");
        clearBttm.setToolTipText("");
        clearBttm.setBorder(null);
        clearBttm.setBorderPainted(false);
        clearBttm.setContentAreaFilled(false);

        jSeparator13.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator13.setToolTipText("");

        jSeparator14.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator14.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator14.setToolTipText("");

        layeredPanel.setLayer(modesBttm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(fontNameScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(fontSizeScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(fontStyleScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(jSeparator4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(colorChooserBttm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(jSeparator6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(jSeparator7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(editableBttm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(clearBttm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(jSeparator13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPanel.setLayer(jSeparator14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredPanelLayout = new javax.swing.GroupLayout(layeredPanel);
        layeredPanel.setLayout(layeredPanelLayout);
        layeredPanelLayout.setHorizontalGroup(
            layeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(modesBttm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fontNameScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fontSizeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fontStyleScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colorChooserBttm, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editableBttm, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(clearBttm, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layeredPanelLayout.setVerticalGroup(
            layeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layeredPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layeredPanelLayout.createSequentialGroup()
                        .addComponent(modesBttm, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jSeparator14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clearBttm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorChooserBttm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editableBttm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fontStyleScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fontNameScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fontSizeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator6)
                    .addComponent(jSeparator7)
                    .addComponent(jSeparator13)))
        );

        topBarPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/note_add_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        addBttm.setBorder(null);
        addBttm.setContentAreaFilled(false);
        addBttm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addBttm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        uploadBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/upload_file_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        uploadBttm.setBorder(null);
        uploadBttm.setContentAreaFilled(false);
        uploadBttm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        uploadBttm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        saveBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/save_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        saveBttm.setBorder(null);
        saveBttm.setContentAreaFilled(false);
        saveBttm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveBttm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        printBttm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/texteditorgui2/print_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        printBttm.setBorder(null);
        printBttm.setBorderPainted(false);
        printBttm.setContentAreaFilled(false);
        printBttm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        printBttm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        printBttm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBttmActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        nameLabel.setFont(new java.awt.Font("Helvetica", 1, 15)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(51, 51, 51));
        nameLabel.setText("New Document");

        javax.swing.GroupLayout topBarPanelLayout = new javax.swing.GroupLayout(topBarPanel);
        topBarPanel.setLayout(topBarPanelLayout);
        topBarPanelLayout.setHorizontalGroup(
            topBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBttm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveBttm)
                .addGap(3, 3, 3)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadBttm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printBttm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addComponent(nameLabel)
                .addContainerGap(435, Short.MAX_VALUE))
        );
        topBarPanelLayout.setVerticalGroup(
            topBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(saveBttm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addBttm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3)
            .addGroup(topBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printBttm, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uploadBttm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layeredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 952, Short.MAX_VALUE)
            .addComponent(topBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addComponent(topBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(layeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        lowPanel.setBackground(new java.awt.Color(204, 204, 204));
        lowPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lowPanel.setPreferredSize(new java.awt.Dimension(923, 40));

        wordLabel.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        wordLabel.setForeground(new java.awt.Color(102, 102, 102));

        statusLabel.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout lowPanelLayout = new javax.swing.GroupLayout(lowPanel);
        lowPanel.setLayout(lowPanelLayout);
        lowPanelLayout.setHorizontalGroup(
            lowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(wordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        lowPanelLayout.setVerticalGroup(
            lowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(lowPanel, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        txtDoc.setColumns(20);
        txtDoc.setRows(5);
        txtDoc.setMargin(new java.awt.Insets(10, 10, 10, 10));
        txtDoc.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtDocCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(txtDoc);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fontStyleScrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontStyleScrollActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fontStyleScrollActionPerformed

    private void fontNameScrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontNameScrollActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fontNameScrollActionPerformed

    private void modesBttmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modesBttmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modesBttmActionPerformed

    private void printBttmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBttmActionPerformed
        PrintThread pt = new PrintThread();
        pt.start();
    }//GEN-LAST:event_printBttmActionPerformed

    private void txtDocCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtDocCaretUpdate
        try {
            wordLabel.setText("Line: " + (txtDoc.getLineOfOffset(txtDoc.getCaretPosition())+1));
        } catch (BadLocationException ex) {
            // L
        }    }//GEN-LAST:event_txtDocCaretUpdate

    
    
    
    public void printDoc(){
        int caretLoc = txtDoc.getCaretPosition();
        java.awt.print.PrinterJob pj = java.awt.print.PrinterJob.getPrinterJob();
        java.awt.print.PageFormat pf = pj.pageDialog(pj.defaultPage());
        txtDoc.setCaretPosition(0);
        JComponentVista vista = new JComponentVista(txtDoc,pf);
        pj.setPageable(vista);
        if(pj.printDialog()){
            try{
                pj.print();
            }catch(PrinterException pe){
                javax.swing.JOptionPane.showMessageDialog(this, "Error Printing File\n" + pe.getLocalizedMessage());
            }finally{
                txtDoc.setCaretPosition(caretLoc);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */  
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextEditorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBttm;
    private javax.swing.JButton clearBttm;
    private javax.swing.JButton colorChooserBttm;
    private javax.swing.JToggleButton editableBttm;
    private javax.swing.JComboBox<String> fontNameScroll;
    private javax.swing.JComboBox<String> fontSizeScroll;
    private javax.swing.JComboBox<String> fontStyleScroll;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLayeredPane layeredPanel;
    public javax.swing.JPanel lowPanel;
    private javax.swing.JToggleButton modesBttm;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton printBttm;
    private javax.swing.JButton saveBttm;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JPanel topBarPanel;
    protected javax.swing.JPanel topPanel;
    private javax.swing.JTextArea txtDoc;
    private javax.swing.JButton uploadBttm;
    private javax.swing.JLabel wordLabel;
    // End of variables declaration//GEN-END:variables

    //Dark Colors
    Color darkPanelColor = new Color (153,153,153);
    Color darkTxtDocColor = new Color (51,51,51);
    Color darkLayeredPanelColor = new Color (102,102,102);
    //Light Colors
    Color ligthPanelColor = new Color(204,204,204);
    Color lightTxtDocColor = new Color (252,252,252);
    Color lightLayeredPanelColor = new Color (255,255,255);
    
    @Override
    public void actionPerformed(ActionEvent ae) {
        //Background Color
        if(ae.getSource()==modesBttm){
            boolean isSelected2 = modesBttm.isSelected();
             
            if(isSelected2){
                if (isSelected2 = true){
                   topBarPanel.setBackground(ligthPanelColor);
                    lowPanel.setBackground(ligthPanelColor);
                    jPanel3.setBackground(ligthPanelColor);
                    topPanel.setBackground(ligthPanelColor);
                    layeredPanel.setBackground(lightLayeredPanelColor);
                    txtDoc.setBackground(lightTxtDocColor);
                    txtDoc.setForeground(Color.BLACK);
                    nameLabel.setForeground(Color.BLACK);
                    wordLabel.setForeground(Color.BLACK);
                statusLabel.setForeground(Color.BLACK);
                }
            }else {
                topBarPanel.setBackground(darkPanelColor);
                lowPanel.setBackground(darkPanelColor);
                jPanel3.setBackground(darkPanelColor);
                topPanel.setBackground(darkPanelColor);
               layeredPanel.setBackground(darkLayeredPanelColor);
                txtDoc.setBackground(darkTxtDocColor);
                txtDoc.setForeground(Color.WHITE);
                nameLabel.setForeground(Color.WHITE);
                wordLabel.setForeground(Color.WHITE);
                statusLabel.setForeground(Color.WHITE);
            }
           
           
        }   
        
        
       //Clear all Buttom
        if(ae.getSource()==clearBttm){
            int tt = JOptionPane.showOptionDialog(this, "<html><h3><b>Do you want to clear this Document?</b></h3> "+" \n You can't undo this action. </html>", "Clear all", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Clear All","Discard"}, "Clear All");
                if(tt==0){
                    txtDoc.setText("");
                }
        }
        
        //Edit and Read Only
        if(ae.getSource()==editableBttm){
            boolean isSelected = editableBttm.isSelected();
            txtDoc.setEditable(isSelected); 
        }
        
        //Color Chooser
        if(ae.getSource()==colorChooserBttm){
            color = JColorChooser.showDialog(this,"Choose a Color", color);
            colorChooserBttm.setForeground(color);
            txtDoc.setForeground(color);
        }
        
         //Font Name
        if(ae.getSource()==fontNameScroll){
            String selectedFontName = (String) fontNameScroll.getSelectedItem();
            fName = selectedFontName;
             Font font = new Font(fName,fStyle,fSize);
             txtDoc.setFont(font);
        }
        
        //Font Size
        if(ae.getSource()== fontSizeScroll){
            String selectedFontSizeString = (String) fontSizeScroll.getSelectedItem();
            int selectedFontSize = Integer.parseInt(selectedFontSizeString);
            fSize = selectedFontSize;
            Font font = new Font(fName,fStyle,fSize);
            txtDoc.setFont(font);
        }
        
        //Font Style
        if(ae.getSource()== fontStyleScroll){
            String selectedFontStyleString = (String) fontStyleScroll.getSelectedItem();
            switch(selectedFontStyleString){
                case "Bold" -> {
                    fStyle = 1;
                }
                case "Italic" -> {
                    fStyle = 2;
                }
                case "Bold & Italic" -> {
                    fStyle = 3;
                }
                default ->{
                    fStyle = 0;
                }
            }
            Font font = new Font(fName,fStyle,fSize);
            txtDoc.setFont(font);
        }
        
        //Save 
        if(ae.getSource()==saveBttm){
            if(dirty){
                saveFile();
          
            } else {
                JOptionPane.showMessageDialog(this, "No changes have been made.");
            }
        }
        
        // New 
        if(ae.getSource()== addBttm){
            if(dirty){
                saveFile();
            }
            newFile();
        }
        if (ae.getSource() == uploadBttm){
            if(dirty){
                saveFile();
            }
            upload();
        }
        
    }    
    public void newFile(){
    java.awt.Toolkit.getDefaultToolkit().beep();
    int newValue = JOptionPane.showOptionDialog(this, "Open new document. \nLeave this document. ", "New Document?", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Open","Stay"}, "Create");
        txtDoc.setText("");
        dirty = false;
        if(newValue == 0){
            File newDoc = new File("filename.txt");
            try {
                if (newDoc.createNewFile()) {
                    System.out.println("File created: " + newDoc.getName());
                } else {
                    System.out.println("File already exists.");
                }
                statusLabel.setText("");
                nameLabel.setText("New Document");
            } catch (IOException e) {
                System.out.println("An error occurred.");
            }
        }
    }
    public void saveFile(){
        java.awt.Toolkit.getDefaultToolkit().beep();
        int retValue = JOptionPane.showOptionDialog(this, "<html><h3><b>Would you like to save this Document?</b></h3></html>", "Save Changes?", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Save","Discard"}, "Save");
        if(retValue == 0){
            try{
                File f;
                JFileChooser chooser = new JFileChooser();
                int saveValue = chooser.showSaveDialog(this);
                if(saveValue == JFileChooser.APPROVE_OPTION){
                    f = chooser.getSelectedFile();
                }else{
                    return;
                }
                BufferedReader reader = new BufferedReader(new StringReader(txtDoc.getText()));
                BufferedWriter writer = new BufferedWriter(new FileWriter(f));
                String str;
                while((str = reader.readLine()) != null){
                    writer.write(str + System.getProperty("line.separator"));
                }
                
                writer.flush();
                reader.close();
                writer.close();
                statusLabel.setText("File Saved on:  " + chooser.getSelectedFile().getAbsolutePath());
                nameLabel.setText(chooser.getDescription(f));
                
                }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Unable to save file");
                }
        }
    }
    public void upload(){
        JFileChooser chooser = new JFileChooser();
        int chooserValue = chooser.showOpenDialog(this);
        if (chooserValue == JFileChooser.APPROVE_OPTION){
            try{
                File f;
                Scanner fin = new Scanner(chooser.getSelectedFile());
                f = chooser.getSelectedFile();
                String buffer = "";
                while(fin.hasNext()){
                    buffer += fin.nextLine() + "\n";
                }
                txtDoc.setText(buffer);
                fin.close();
                statusLabel.setText("Loaded: " + chooser.getSelectedFile().getAbsolutePath());
                nameLabel.setText(chooser.getDescription(f));
            } catch (FileNotFoundException ex){
                JOptionPane.showMessageDialog(this, "File not Found");
            }
        }
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        dirty = true;
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        dirty = true;
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        //plain text components don't fire this event
    }

    @Override
    public void windowOpened(WindowEvent e) {
        
    }

    @Override
    public void windowClosing(WindowEvent e) {
        if(dirty)
            saveFile();
    }

    @Override
    public void windowClosed(WindowEvent e) {
        
    }

    @Override
    public void windowIconified(WindowEvent e) {
        
    } 

    @Override
    public void windowDeiconified(WindowEvent e) {
        
    }

    @Override
    public void windowActivated(WindowEvent e) {
        
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        
    }
    
    class PrintThread extends Thread{
        @Override
        public void run(){
            printDoc();
        }
    }
}
